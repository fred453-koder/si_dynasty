import feedparser
import openai
import tldextract
import logging
from datetime import datetime, timedelta
from telegram import Bot
from telegram.error import TelegramError
import os
import time

# ====== –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è ======
TELEGRAM_TOKEN = os.environ.get("TELEGRAM_TOKEN")
TELEGRAM_CHANNEL_ID = os.environ.get("TELEGRAM_CHANNEL_ID")
OPENAI_API_KEY = os.environ.get("OPENAI_API_KEY")

openai.api_key = OPENAI_API_KEY

bot = Bot(token=TELEGRAM_TOKEN)

# ====== RSS –¥–∂–µ—Ä–µ–ª–∞ ======
FEEDS = [
    "http://www.xinhuanet.com/english/rss/worldrss.xml",
    "http://www.chinadaily.com.cn/rss/china_rss.xml",
    "https://www.scmp.com/rss/91/feed"
]

# ====== –ö–ª—é—á–æ–≤—ñ —Ç–µ–º–∏ ======
KEYWORDS = [
    "China", "Chinese", "Beijing", "Xi Jinping", "PLA", "Taiwan", "BRI",
    "AI", "drones", "military", "investment", "chip", "semiconductor",
    "Bangladesh", "Cambodia", "Laos", "Ream", "naval", "base", "supply chains",
    "geopolitics", "BRICS", "conflict", "Taipei", "aircraft carrier", "blockade",
    "diplomatic", "joint", "security", "Pentagon", "Silk Road", "Beidou",
    "Huawei", "TikTok", "ByteDance"
]

# ====== –Ü—Å—Ç–æ—Ä—ñ—è –Ω–æ–≤–∏–Ω –¥–ª—è –∞–Ω—Ç–∏–ø–æ–≤—Ç–æ—Ä—É ======
posted_links = set()

# ====== –û–±—Ä–æ–±–∫–∞ –æ–¥–Ω–æ–≥–æ RSS ======
def parse_feed(feed_url):
    print(f"–ü–æ—Ç—ñ–∫: {feed_url}")
    try:
        feed = feedparser.parse(feed_url)
        for entry in feed.entries:
            title = entry.get('title', '')
            summary = entry.get('summary', '')
            link = entry.get('link', '')
            published = entry.get('published', '')

            # ===== –§—ñ–ª—å—Ç—Ä –¥–∞—Ç–∏ (—Ç–∏–º—á–∞—Å–æ–≤–æ –Ω–∞ 720 –≥–æ–¥–∏–Ω –¥–ª—è —Ç–µ—Å—Ç—É) =====
            if 'published_parsed' in entry:
                pub_date = datetime.fromtimestamp(time.mktime(entry.published_parsed))
                if datetime.now() - pub_date > timedelta(hours=720):  # –±—É–ª–æ 72
                    print(f"–ü—Ä–æ–ø—É—â–µ–Ω–æ: —Å—Ç–∞—Ä–∞ –Ω–æ–≤–∏–Ω–∞ ‚Äî {title}")
                    continue

            if not any(kw.lower() in title.lower() for kw in KEYWORDS):
                continue

            source = extract_source_name(link)
            rewritten = rewrite_news(title, summary, source)
            post_to_telegram(rewritten)
            posted_links.add(link)

    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –æ–±—Ä–æ–±–∫–∏ —Å—Ç—Ä—ñ—á–∫–∏ {feed_url}: {e}")


# ====== –ü–µ—Ä–µ–ø–∏—Å –Ω–æ–≤–∏–Ω–∏ —á–µ—Ä–µ–∑ OpenAI ======
def rewrite_news(title, summary, source):
    prompt = f"""
–¢–∏ ‚Äî –∞–Ω–∞–ª—ñ—Ç–∏—á–Ω–∏–π —Ä–µ–¥–∞–∫—Ç–æ—Ä. –°—Ç–≤–æ—Ä–∏ Telegram-–ø–æ—Å—Ç –ø—Ä–æ –ö–∏—Ç–∞–π —É —Ñ–æ—Ä–º–∞—Ç—ñ ¬´–î–∏–Ω–∞—Å—Ç—ñ—è –°—ñ¬ª. –ë—É–¥—å —Å—É–≤–æ—Ä–∏–º –ª—ñ—Ç—Ä–µ–¥–∞–∫—Ç–æ—Ä–æ–º: –ø—Ä–∏–±–∏—Ä–∞–π —Ä—É—Å–∏–∑–º–∏, –∫–∞–ª—å–∫–∏, –ø–æ–≤—Ç–æ—Ä–∏. –£–Ω–∏–∫–∞–π –∫–∞–Ω—Ü–µ–ª—è—Ä–∏–∑–º—ñ–≤. –ü–∏—à–∏ —Å—É—á–∞—Å–Ω–æ—é, –∂–∏–≤–æ—é, –∞–ª–µ –Ω–µ–π—Ç—Ä–∞–ª—å–Ω–æ—é —É–∫—Ä–∞—ó–Ω—Å—å–∫–æ—é.

‚ùó –°—Ç—Ä—É–∫—Ç—É—Ä–∞:
1. **–ñ–∏—Ä–Ω–∏–π –∑–∞–≥–æ–ª–æ–≤–æ–∫** ‚Äî –∫–æ—Ä–æ—Ç–∫–∏–π, —ñ–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω–∏–π, –Ω–µ –∫–ª—ñ–∫–±–µ–π—Ç, –∞–ª–µ —á—ñ–ø–ª—è—î. –ë–µ–∑ —Å–∫–ª–∞–¥–Ω–∏—Ö –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü—ñ–π.
2. –ü–µ—Ä—à–∏–π –∞–±–∑–∞—Ü ‚Äî –∫–æ—Ä–æ—Ç–∫–∏–π –≤–∏–∫–ª–∞–¥ —Å—É—Ç—ñ –ø–æ–¥—ñ—ó.
3. –î—Ä—É–≥–∏–π –∞–±–∑–∞—Ü ‚Äî –∞–Ω–∞–ª—ñ—Ç–∏—á–Ω–µ —Ä–æ–∑—à–∏—Ä–µ–Ω–Ω—è: –ø–æ—è—Å–Ω–∏, —á–æ–º—É —Ü–µ –≤–∞–∂–ª–∏–≤–æ, —è–∫ —Ü–µ –≤–ø–ª–∏–≤–∞—î –Ω–∞ —Ä–µ–≥—ñ–æ–Ω –∞–±–æ –≥–ª–æ–±–∞–ª—å–Ω–∏–π –±–∞–ª–∞–Ω—Å —Å–∏–ª. –ó–∞–≤–∂–¥–∏ –∑–≥–∞–¥—É–π —Ä–æ–ª—å –ö–∏—Ç–∞—é.
4. –¢—Ä–µ—Ç—ñ–π –∞–±–∑–∞—Ü —É —Ñ–æ—Ä–º–∞—Ç—ñ `code` ‚Äî —Å—É—Ö–∏–π, —Ñ–∞–∫—Ç–∏—á–Ω–∏–π –ø—Ä–æ–≥–Ω–æ–∑ –Ω–∞ 1‚Äì3 —Ä–µ—á–µ–Ω–Ω—è. –ù–µ –ø–∏—à–∏ —Å–ª–æ–≤–æ "–ü—Ä–æ–≥–Ω–æ–∑".
5. –ß–µ—Ç–≤–µ—Ä—Ç–∏–π –∞–±–∑–∞—Ü ‚Äî –∫—É—Ä—Å–∏–≤–æ–º —Ü–∏—Ç–∞—Ç–∞ –æ–¥–Ω–æ–≥–æ –∫–∏—Ç–∞–π—Å—å–∫–æ–≥–æ –º–∏—Å–ª–∏—Ç–µ–ª—è. –í–∏–±—ñ—Ä –º–∏—Å–ª–∏—Ç–µ–ª—è –∑–∞–ª–µ–∂–∏—Ç—å –≤—ñ–¥ —Ç–µ–º–∏:
   - –°—É–Ω—å –¶–∑–∏ ‚Äî —è–∫—â–æ –π–¥–µ—Ç—å—Å—è –ø—Ä–æ –≤—ñ–π–Ω—É –∞–±–æ —Ç–∞–∫—Ç–∏–∫—É;
   - –ú–∞–æ –¶–∑–µ–¥—É–Ω ‚Äî –¥–ª—è —Ç–µ–º –±–æ—Ä–æ—Ç—å–±–∏, –≤–∏–∂–∏–≤–∞–Ω–Ω—è, –æ–ø–æ—Ä—É;
   - –î—ç–Ω –°—è–æ–ø—ñ–Ω ‚Äî –¥–ª—è –µ–∫–æ–Ω–æ–º—ñ–∫–∏, –∞–¥–∞–ø—Ç–∞—Ü—ñ—ó, —Å—Ç—Ä–∞—Ç–µ–≥—ñ—ó –º º—è–∫–æ—ó —Å–∏–ª–∏;
   - –•–∞–Ω—å –§–µ–π-—Ü–∑–∏ ‚Äî –¥–ª—è —Ç–µ–º —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è, —Å–∏–ª–∏, –ø–æ–∫–∞—Ä–∞–Ω–Ω—è –∞–±–æ –∫–æ–Ω—Ç—Ä–æ–ª—é.
6. –ü‚Äô—è—Ç–∏–π –∞–±–∑–∞—Ü ‚Äî _–ü—ñ–¥–ø–∏—Å—É–π—Å—è –Ω–∞ –î–∏–Ω–∞—Å—Ç—ñ—é üõ∏_

–û—Ñ–æ—Ä–º–∏ –¥–∂–µ—Ä–µ–ª–æ –Ω–∞–ø—Ä–∏–∫—ñ–Ω—Ü—ñ —è–∫: üìå –î–∂–µ—Ä–µ–ª–æ: [–Ω–∞–∑–≤–∞]

–ü–æ–¥—ñ—è: {title}
–û–ø–∏—Å: {summary}
–î–∂–µ—Ä–µ–ª–æ: {source}
–ú–æ–≤–∞: —É–∫—Ä–∞—ó–Ω—Å—å–∫–∞
"""


    response = openai.chat.completions.create(
        model="gpt-3.5-turbo",
        messages=[
            {"role": "system", "content": "–¢–∏ ‚Äî –∞–Ω–∞–ª—ñ—Ç–∏—á–Ω–∏–π —Ä–µ–¥–∞–∫—Ç–æ—Ä —É–∫—Ä–∞—ó–Ω—Å—å–∫–æ–≥–æ Telegram-–∫–∞–Ω–∞–ª—É –ø—Ä–æ –ø–æ–ª—ñ—Ç–∏–∫—É –ö–∏—Ç–∞—é."},
            {"role": "user", "content": prompt}
        ],
        temperature=0.7
    )
    return response.choices[0].message.content

# ====== –í–∏–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –≤ Telegram ======
def post_to_telegram(text):
    try:
        bot.send_message(chat_id=TELEGRAM_CHANNEL_ID, text=text, parse_mode='Markdown')
    except TelegramError as e:
        logging.error(f"–ü–æ–º–∏–ª–∫–∞ Telegram: {e}")

# ====== –î–∂–µ—Ä–µ–ª–æ –∑ URL ======
def extract_source_name(url):
    extracted = tldextract.extract(url)
    return f"{extracted.domain}.{extracted.suffix}"

# ====== –°—Ç–∞—Ä—Ç ======
if __name__ == '__main__':
    print("–°–∫—Ä–∏–ø—Ç –∑–∞–ø—É—â–µ–Ω ‚Äî –ø–æ—á–∏–Ω–∞—î–º–æ –æ–±—Ä–æ–±–∫—É RSS")
    for feed in FEEDS:
        parse_feed(feed)
        time.sleep(2)
